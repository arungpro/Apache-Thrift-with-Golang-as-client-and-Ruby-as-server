#
# Autogenerated by Thrift Compiler (0.9.3)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require_relative 'add_types'

module Addservice
  module AddService
    class Client
      include ::Thrift::Client

      def add(a, b)
        puts "called here"
        send_add(a, b)
        return recv_add()
      end

      def send_add(a, b)
        send_message('add', Add_args, :a => a, :b => b)
      end

      def recv_add()
        result = receive_message(Add_result)
        return result.success unless result.success.nil?
        raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'add failed: unknown result')
      end

    end

    class Processor
      include ::Thrift::Processor

      def process_add(seqid, iprot, oprot)
        puts "called here"
        args = read_args(iprot, Add_args)
        result.success = @handler.add(args.a, args.b)
        write_result(result, oprot, 'add', seqid)
      end

    end

    # HELPER FUNCTIONS AND STRUCTURES

    class Add_args
      include ::Thrift::Struct, ::Thrift::Struct_Union
      A = 1
      B = 2

      FIELDS = {
        A => {:type => ::Thrift::Types::I32, :name => 'a'},
        B => {:type => ::Thrift::Types::I32, :name => 'b'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Add_result
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SUCCESS = 0

      FIELDS = {
        SUCCESS => {:type => ::Thrift::Types::I32, :name => 'success'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end

end
